server:
  port: 8086
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://luozy:jack123@localhost:8761/eureka/,http://luozy:jack123@localhost:8762/eureka/,http://luozy:jack123@localhost:8763/eureka/} # Eureka Server注册中心的地址
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true} # 采用IP注册
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port} # 定义实例ID格式
    # status-page-url: http://www.baidu.com # 这个是自定义实例的跳转链接地址，就是在eureka页面上status下面的跳转链接
    lease-renewal-interval-in-seconds: 5 # 表示Eureka Client发送心跳给server端的频率
    lease-expiration-duration-in-seconds: 5 # 表示Eureka Server至上一次收到client的心跳之后，等待下一次心跳的超时时间，若在这个时间内没有收到下一次心跳，则移除该instance

ribbon:
  ConnectTimeout: 3000 # 请求连接的超时时间，单位ms
  ReadTimeout: 60000  # 请求处理的超时时间，单位ms
  MaxAutoRetries: 1  # 对当前实例的重试次数
  MaxAutoRetriesNextServer: 3  # 切换实例的最大重试次数
  OkToRetryOnAllOperations: true  # 对所有操作请求都进行重试
  RetryableStatusCodes: 500,404,502  # 对指定的http响应码进行重试
  eager-load:
    enabled: true # 配置开启Ribbon的饥饿加载模式
    clients: ribbon-config # 指定需要饥饿加载的服务名，也就是需要调用的服务，若有多个则用逗号隔开
#ribbon-config:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.jack.rule.MyRule

spring:
  application:
    name: ribbon-config
